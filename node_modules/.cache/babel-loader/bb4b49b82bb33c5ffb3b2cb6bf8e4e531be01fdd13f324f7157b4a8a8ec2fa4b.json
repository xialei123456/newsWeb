{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-bb96df32\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"label-news\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"来自标签的新闻集合\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($setup.labelTitle) + \" 标签的热点新闻\", 1 /* TEXT */), _hoisted_2, _createCommentVNode(\" 使用TableTitle获取labelNews,并传入子组件的newsList属性中 \"), _createVNode($setup[\"NewsList\"], {\n    newsList: $setup.labelNews\n  }, null, 8 /* PROPS */, [\"newsList\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_toDisplayString","$setup","labelTitle","_hoisted_2","_createCommentVNode","_createVNode","newsList","labelNews"],"sources":["D:\\ForWork\\找实习\\中信证券code比赛\\复赛\\front\\news-front\\src\\components\\LabelNews.vue"],"sourcesContent":["<template>\r\n    <div class=\"label-news\">\r\n      <h1>{{ labelTitle }} 标签的热点新闻</h1>\r\n      <p>来自标签的新闻集合</p>\r\n      <!-- 使用TableTitle获取labelNews,并传入子组件的newsList属性中 -->\r\n      <NewsList :newsList=\"labelNews\"/>\r\n    </div>\r\n</template>\r\n  \r\n  <script>\r\n  import NewsList from './NewsList.vue'\r\n  export default {\r\n    name: 'LabelNews',\r\n    components: {\r\n      NewsList\r\n    }\r\n  }\r\n  </script>\r\n  \r\n<script setup>\r\nimport { ref, onMounted, watch } from 'vue'\r\nimport { useRoute } from 'vue-router'\r\nimport { useRouter } from 'vue-router'\r\n  // 获取路由信息\r\n  const route = useRoute()\r\n  \r\n  // 定义一个响应式变量并存储当前路由标签\r\n  let labelTitle = ref('')\r\n  \r\n  //定义新闻列表，需根据实际需求获取，传入子组件的props或者获取后端数据\r\n  let labelNews = ref([])\r\n  \r\n  // 更新新闻信息的函数\r\n  const updateLabelNews = (labelTitle) => {\r\n    //假设是从后端获取信息，这里使用静态数据\r\n    labelNews = [\r\n      {\r\n        id: 1, \r\n        title: labelTitle.value+'的标题',\r\n        description: '这是一个示例描述',\r\n        source: '来源标记',\r\n        url: 'https://finance.sina.com.cn/jjxw/2024-08-09/doc-ihchfyg653217.shtml'\r\n      }\r\n    ]\r\n    console.log(labelTitle.value, '已获取')\r\n  }\r\n  \r\n  // 组件被挂载时，根据路由参数更新标签\r\n  onMounted(() => {\r\n    labelTitle.value = route.params.label\r\n    updateLabelNews(labelTitle) // 更新新闻列表\r\n  })\r\n  \r\n  // 监听路由path变化来更新新闻信息\r\n\r\n  const router = useRouter()\r\n  watch(() => router.currentRoute.value.path, () => {\r\n    labelTitle.value = route.params.label\r\n    updateLabelNews(labelTitle) //更新新闻列表\r\n  }, { immediate: true, deep: true })\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .label-news {\r\n    padding: 20px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAY;gEAErBC,mBAAA,CAAgB,WAAb,WAAS;;uBAFdC,mBAAA,CAKM,OALNC,UAKM,GAJJF,mBAAA,CAAiC,YAAAG,gBAAA,CAA1BC,MAAA,CAAAC,UAAU,IAAG,UAAQ,iBAC5BC,UAAgB,EAChBC,mBAAA,gDAAmD,EACnDC,YAAA,CAAiCJ,MAAA;IAAtBK,QAAQ,EAAEL,MAAA,CAAAM;EAAS,sC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}