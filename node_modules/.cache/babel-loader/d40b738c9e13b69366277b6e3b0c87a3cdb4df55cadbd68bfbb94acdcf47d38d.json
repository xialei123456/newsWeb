{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive, onMounted } from 'vue';\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nimport { setCookie, getCookie } from '@/utils/support';\nexport default {\n  __name: 'SideBar',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const showDialog = ref(false); // 控制弹出框显示/隐藏的变量\n    const loginFormRef = ref(null); // 绑定表单引用\n\n    const store = useStore(); //使用Vuex实例\n    const router = useRouter();\n    const loginForm = reactive({\n      // 格式化登录信息\n      username: '',\n      password: ''\n    });\n\n    /*--------------------登录逻辑部分-----------------*/\n    const loginRules = reactive({\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur',\n        min: 3\n      }]\n    });\n    const loading = ref(false);\n    const valid = ref(false);\n    const handleLogin = () => {\n      loginFormRef.value.validate().then(success => {\n        if (success) {\n          loading.value = true;\n          store.dispatch('Login', loginForm).then(() => {\n            loading.value = false;\n            setCookie('username', loginForm.username, 15);\n            setCookie('password', loginForm.password, 15);\n            router.push({\n              path: '/'\n            });\n          }).catch(() => {\n            loading.value = false;\n          });\n        } else {\n          console.log('参数验证不合法！');\n          return false;\n        }\n      });\n    };\n    onMounted(() => {\n      loginForm.username = getCookie('username') || 'admin';\n      loginForm.password = getCookie('password') || '';\n    });\n    const __returned__ = {\n      showDialog,\n      loginFormRef,\n      store,\n      router,\n      loginForm,\n      loginRules,\n      loading,\n      valid,\n      handleLogin,\n      ref,\n      reactive,\n      onMounted,\n      get useStore() {\n        return useStore;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get setCookie() {\n        return setCookie;\n      },\n      get getCookie() {\n        return getCookie;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","useStore","useRouter","setCookie","getCookie","showDialog","loginFormRef","store","router","loginForm","username","password","loginRules","required","message","trigger","min","loading","valid","handleLogin","value","validate","then","success","dispatch","push","path","catch","console","log"],"sources":["D:/ForWork/找实习/中信证券code比赛/复赛/front/news-front/src/components/SideBar.vue"],"sourcesContent":["<template>\r\n  <aside class=\"sidebar\">\r\n    <div class=\"picks\">\r\n      <p style=\"margin-left:2px\">猜你喜欢</p>\r\n      <v-btn v-if=\"!isLoggedIn\" @click=\"showDialog = true\" rounded=\"lg\" size=\"small\" block>登录</v-btn>\r\n    </div>\r\n    <!-- 登录弹出框，使用v-dialog组件实现 -->\r\n    <v-dialog v-model=\"showDialog\" persistent max-width=\"400\">\r\n      <v-card>\r\n        <!-- 标题部分 -->\r\n        <v-card-title>\r\n          <span class=\"text-h5\">登录</span>\r\n        </v-card-title>\r\n        <!-- 输入字段 -->\r\n        <v-card-text>\r\n          <!-- 这里绑定 loginFormRef -->\r\n          <v-form ref=\"loginFormRef\" v-model=\"valid\" :rules=\"loginRules\" :lazy-validation=\"true\">\r\n            <v-text-field v-model=\"loginForm.username\" label=\"用户名\" required></v-text-field>\r\n            <v-text-field v-model=\"loginForm.password\" label=\"密码\" type=\"password\" required></v-text-field>\r\n          </v-form>\r\n        </v-card-text>\r\n        <!-- 按钮区域 -->\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <!-- 登录按钮 -->\r\n          <v-btn color=\"blue darken-1\" text @click=\"handleLogin\">登录</v-btn>\r\n          <!-- 取消按钮 -->\r\n          <v-btn color=\"grey darken-1\" text @click=\"showDialog = false\">取消</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </aside>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, onMounted } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport { setCookie, getCookie } from '@/utils/support';\r\n\r\nconst showDialog = ref(false);  // 控制弹出框显示/隐藏的变量\r\nconst loginFormRef = ref(null); // 绑定表单引用\r\n\r\nconst store = useStore();  //使用Vuex实例\r\nconst router = useRouter(); \r\n\r\nconst loginForm = reactive({  // 格式化登录信息\r\n  username: '',\r\n  password: '',\r\n});\r\n\r\n/*--------------------登录逻辑部分-----------------*/ \r\nconst loginRules = reactive({\r\n  username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\r\n  password: [{ required: true, message: '请输入密码', trigger: 'blur', min: 3 }],\r\n});\r\n\r\nconst loading = ref(false);\r\nconst valid = ref(false);\r\n\r\nconst handleLogin = () => {\r\n  loginFormRef.value.validate().then(success => {\r\n    if (success) {\r\n      loading.value = true;\r\n      store.dispatch('Login', loginForm).then(() => {\r\n        loading.value = false;\r\n        setCookie('username', loginForm.username, 15);\r\n        setCookie('password', loginForm.password, 15);\r\n        router.push({ path: '/' });\r\n      }).catch(() => {\r\n        loading.value = false;\r\n      });\r\n    } else {\r\n      console.log('参数验证不合法！');\r\n      return false;\r\n    }\r\n  });\r\n};\r\n\r\nonMounted(() => {\r\n  loginForm.username = getCookie('username') || 'admin';\r\n  loginForm.password = getCookie('password') || '';\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.sidebar {\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border-left: 1px solid #ddd;\r\n  width: 20%;\r\n}\r\n\r\n.picks button {\r\n  background-color: #bfcdff;\r\n  color: #000000;\r\n  border: none;\r\n  padding: 3px 6px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  min-width: 0;\r\n}\r\n</style>\r\n"],"mappings":";AAmCA,SAASA,GAAG,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,KAAK;AAC9C,SAASC,QAAQ,QAAQ,MAAM;AAC/B,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,EAAEC,SAAS,QAAQ,iBAAiB;;;;;;;IAEtD,MAAMC,UAAU,GAAGP,GAAG,CAAC,KAAK,CAAC,CAAC,CAAE;IAChC,MAAMQ,YAAY,GAAGR,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;;IAEhC,MAAMS,KAAK,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAE;IAC3B,MAAMO,MAAM,GAAGN,SAAS,CAAC,CAAC;IAE1B,MAAMO,SAAS,GAAGV,QAAQ,CAAC;MAAG;MAC5BW,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC,CAAC;;IAEF;IACA,MAAMC,UAAU,GAAGb,QAAQ,CAAC;MAC1BW,QAAQ,EAAE,CAAC;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,CAAC;MAClEJ,QAAQ,EAAE,CAAC;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAE,CAAC;IAC1E,CAAC,CAAC;IAEF,MAAMC,OAAO,GAAGnB,GAAG,CAAC,KAAK,CAAC;IAC1B,MAAMoB,KAAK,GAAGpB,GAAG,CAAC,KAAK,CAAC;IAExB,MAAMqB,WAAW,GAAGA,CAAA,KAAM;MACxBb,YAAY,CAACc,KAAK,CAACC,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,OAAO,IAAI;QAC5C,IAAIA,OAAO,EAAE;UACXN,OAAO,CAACG,KAAK,GAAG,IAAI;UACpBb,KAAK,CAACiB,QAAQ,CAAC,OAAO,EAAEf,SAAS,CAAC,CAACa,IAAI,CAAC,MAAM;YAC5CL,OAAO,CAACG,KAAK,GAAG,KAAK;YACrBjB,SAAS,CAAC,UAAU,EAAEM,SAAS,CAACC,QAAQ,EAAE,EAAE,CAAC;YAC7CP,SAAS,CAAC,UAAU,EAAEM,SAAS,CAACE,QAAQ,EAAE,EAAE,CAAC;YAC7CH,MAAM,CAACiB,IAAI,CAAC;cAAEC,IAAI,EAAE;YAAI,CAAC,CAAC;UAC5B,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM;YACbV,OAAO,CAACG,KAAK,GAAG,KAAK;UACvB,CAAC,CAAC;QACJ,CAAC,MAAM;UACLQ,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;UACvB,OAAO,KAAK;QACd;MACF,CAAC,CAAC;IACJ,CAAC;IAED7B,SAAS,CAAC,MAAM;MACdS,SAAS,CAACC,QAAQ,GAAGN,SAAS,CAAC,UAAU,CAAC,IAAI,OAAO;MACrDK,SAAS,CAACE,QAAQ,GAAGP,SAAS,CAAC,UAAU,CAAC,IAAI,EAAE;IAClD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}