{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d753e19c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"news-page\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($setup.news.title), 1 /* TEXT */), _createCommentVNode(\" 新闻标题展示 \"), _createElementVNode(\"p\", null, _toDisplayString($setup.news.content), 1 /* TEXT */), _createCommentVNode(\" 新闻内容显示 \")]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$setup","news","title","_createCommentVNode","content"],"sources":["D:\\ForWork\\找实习\\中信证券code比赛\\复赛\\front\\news-front\\src\\components\\NewsPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"news-page\">\r\n      <h1>{{ news.title }}</h1> <!-- 新闻标题展示 -->\r\n      <p>{{ news.content }}</p> <!-- 新闻内容显示 -->\r\n    \r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted } from 'vue'\r\n  import { useRoute } from 'vue-router'\r\n  \r\n  // 获取路由信息并解析\r\n  const route = useRoute()\r\n  \r\n  // 定义响应式对象来存储新闻内容\r\n  const news = ref({ title: '', content: '' }) // 初始状态为空的新闻对象\r\n  \r\n  // 获取新闻详细信息的函数\r\n  const fetchNewsDetails = (id) => {\r\n    const mockNewsData = {\r\n      1: { title: 'News 1', content: 'Content for News 1' },\r\n      2: { title: 'News 2', content: 'Content for News 2' },\r\n      3: { title: 'News 3', content: 'Content for News 3' }\r\n    }\r\n    return mockNewsData[id] || { title: 'Not Found', content: 'No content available.' }\r\n  }\r\n  \r\n  // 组件挂载时获取新闻信息\r\n  onMounted(() => {\r\n    const newsId = route.params.id\r\n    news.value = fetchNewsDetails(newsId)\r\n  })\r\n  \r\n  // 返回按钮功能\r\n  // const goBack = () => {\r\n  //   router.push('/') // 返回应用的首页或新闻列表页\r\n  // }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .news-page {\r\n    display: absolute;\r\n    margin: auto; /* 页中页居中布局 */\r\n    padding: 20px; /* 添加内边距以提升可读性 */\r\n    align-items: center;\r\n  }\r\n  \r\n  .news-page button {\r\n    margin: auto;\r\n    padding: 2px 4px;\r\n    background-color: #1a7e38;\r\n    color: #fff;\r\n    border: none;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .news-page button:hover {\r\n    background-color: #0c5bbf;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAW;;uBAAtBC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBC,MAAA,CAAAC,IAAI,CAACC,KAAK,kBAASC,mBAAA,YAAe,EACzCL,mBAAA,CAAyB,WAAAC,gBAAA,CAAnBC,MAAA,CAAAC,IAAI,CAACG,OAAO,kBAAQD,mBAAA,YAAe,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}