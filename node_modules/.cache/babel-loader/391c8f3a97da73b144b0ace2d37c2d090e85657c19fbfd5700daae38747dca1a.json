{"ast":null,"code":"//axios的配置文件，写法相对固定\n\nimport axios from 'axios';\nimport { Message, MessageBox } from 'element-ui';\nimport store from '../store';\n//使用vuex实例进行全局token及其他信息管理和储存\nimport { getToken } from '@/utils/auth';\n//auth文件里使用js-cookie库定义了获取、管理token等方法\n\n// 创建axios实例\nconst service = axios.create({\n  baseURL: process.env.BASE_API,\n  // api的base_url\n  timeout: 15000 // 请求超时时间\n});\n\n// request拦截器\nservice.interceptors.request.use(config => {\n  if (store.getters.token) {\n    config.headers['Authorization'] = getToken(); // 让每个请求携带自定义token 请根据实际情况自行修改\n  }\n  return config;\n}, error => {\n  // Do something with request error\n  console.log(error); // for debug\n  Promise.reject(error);\n});\n\n// respone拦截器\nservice.interceptors.response.use(response => {\n  /**\r\n  * code为非200是抛错 可结合自己业务进行修改\r\n  */\n  const res = response.data;\n  if (res.code !== 200) {\n    Message({\n      message: res.message,\n      type: 'error',\n      duration: 3 * 1000\n    });\n\n    // 401:未登录;\n    if (res.code === 401) {\n      MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\n        confirmButtonText: '重新登录',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        store.dispatch('FedLogOut').then(() => {\n          location.reload(); // 为了重新实例化vue-router对象 避免bug\n        });\n      });\n    }\n    return Promise.reject('error');\n  } else {\n    return response.data;\n  }\n}, error => {\n  console.log('err' + error); // for debug\n  Message({\n    message: error.message,\n    type: 'error',\n    duration: 3 * 1000\n  });\n  return Promise.reject(error);\n});\nexport default service;","map":{"version":3,"names":["axios","Message","MessageBox","store","getToken","service","create","baseURL","process","env","BASE_API","timeout","interceptors","request","use","config","getters","token","headers","error","console","log","Promise","reject","response","res","data","code","message","type","duration","confirm","confirmButtonText","cancelButtonText","then","dispatch","location","reload"],"sources":["D:/ForWork/找实习/中信证券code比赛/复赛/front/news-front/src/utils/request.js"],"sourcesContent":["//axios的配置文件，写法相对固定\r\n\r\nimport axios from 'axios'\r\nimport { Message, MessageBox } from 'element-ui'\r\nimport store from '../store'\r\n//使用vuex实例进行全局token及其他信息管理和储存\r\nimport { getToken } from '@/utils/auth'\r\n//auth文件里使用js-cookie库定义了获取、管理token等方法\r\n\r\n\r\n// 创建axios实例\r\nconst service = axios.create({\r\n  baseURL: process.env.BASE_API, // api的base_url\r\n  timeout: 15000 // 请求超时时间\r\n})\r\n\r\n// request拦截器\r\nservice.interceptors.request.use(config => {\r\n  if (store.getters.token) {\r\n    config.headers['Authorization'] = getToken() // 让每个请求携带自定义token 请根据实际情况自行修改\r\n  }\r\n  return config\r\n}, error => {\r\n  // Do something with request error\r\n  console.log(error) // for debug\r\n  Promise.reject(error)\r\n})\r\n\r\n// respone拦截器\r\nservice.interceptors.response.use(\r\n  response => {\r\n  /**\r\n  * code为非200是抛错 可结合自己业务进行修改\r\n  */\r\n    const res = response.data\r\n    if (res.code !== 200) {\r\n      Message({\r\n        message: res.message,\r\n        type: 'error',\r\n        duration: 3 * 1000\r\n      })\r\n\r\n      // 401:未登录;\r\n      if (res.code === 401) {\r\n        MessageBox.confirm('你已被登出，可以取消继续留在该页面，或者重新登录', '确定登出', {\r\n          confirmButtonText: '重新登录',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }).then(() => {\r\n          store.dispatch('FedLogOut').then(() => {\r\n            location.reload()// 为了重新实例化vue-router对象 避免bug\r\n          })\r\n        })\r\n      }\r\n      return Promise.reject('error')\r\n    } else {\r\n      return response.data\r\n    }\r\n  },\r\n  error => {\r\n    console.log('err' + error)// for debug\r\n    Message({\r\n      message: error.message,\r\n      type: 'error',\r\n      duration: 3 * 1000\r\n    })\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nexport default service\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,UAAU,QAAQ,YAAY;AAChD,OAAOC,KAAK,MAAM,UAAU;AAC5B;AACA,SAASC,QAAQ,QAAQ,cAAc;AACvC;;AAGA;AACA,MAAMC,OAAO,GAAGL,KAAK,CAACM,MAAM,CAAC;EAC3BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ;EAAE;EAC/BC,OAAO,EAAE,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF;AACAN,OAAO,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACzC,IAAIZ,KAAK,CAACa,OAAO,CAACC,KAAK,EAAE;IACvBF,MAAM,CAACG,OAAO,CAAC,eAAe,CAAC,GAAGd,QAAQ,CAAC,CAAC,EAAC;EAC/C;EACA,OAAOW,MAAM;AACf,CAAC,EAAEI,KAAK,IAAI;EACV;EACAC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,EAAC;EACnBG,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AACvB,CAAC,CAAC;;AAEF;AACAd,OAAO,CAACO,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC/BU,QAAQ,IAAI;EACZ;AACF;AACA;EACI,MAAMC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACzB,IAAID,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;IACpB1B,OAAO,CAAC;MACN2B,OAAO,EAAEH,GAAG,CAACG,OAAO;MACpBC,IAAI,EAAE,OAAO;MACbC,QAAQ,EAAE,CAAC,GAAG;IAChB,CAAC,CAAC;;IAEF;IACA,IAAIL,GAAG,CAACE,IAAI,KAAK,GAAG,EAAE;MACpBzB,UAAU,CAAC6B,OAAO,CAAC,0BAA0B,EAAE,MAAM,EAAE;QACrDC,iBAAiB,EAAE,MAAM;QACzBC,gBAAgB,EAAE,IAAI;QACtBJ,IAAI,EAAE;MACR,CAAC,CAAC,CAACK,IAAI,CAAC,MAAM;QACZ/B,KAAK,CAACgC,QAAQ,CAAC,WAAW,CAAC,CAACD,IAAI,CAAC,MAAM;UACrCE,QAAQ,CAACC,MAAM,CAAC,CAAC;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACA,OAAOf,OAAO,CAACC,MAAM,CAAC,OAAO,CAAC;EAChC,CAAC,MAAM;IACL,OAAOC,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC,EACDP,KAAK,IAAI;EACPC,OAAO,CAACC,GAAG,CAAC,KAAK,GAAGF,KAAK,CAAC;EAC1BlB,OAAO,CAAC;IACN2B,OAAO,EAAET,KAAK,CAACS,OAAO;IACtBC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,CAAC,GAAG;EAChB,CAAC,CAAC;EACF,OAAOR,OAAO,CAACC,MAAM,CAACJ,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAed,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}