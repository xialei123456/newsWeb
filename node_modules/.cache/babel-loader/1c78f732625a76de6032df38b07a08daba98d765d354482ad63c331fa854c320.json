{"ast":null,"code":"import { ref } from 'vue';\n// 控制弹出框显示/隐藏的变量\nimport { storeToRefs } from 'pinia';\nimport { useUserStore } from '@/stores/user'; // 引入store\n\nexport default {\n  __name: 'SideBar',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const showDialog = ref(false);\n\n    // 使用Pinia进行状态管理\n    const userStore = useUserStore();\n    const {\n      isLoggedIn,\n      username,\n      password\n    } = storeToRefs(userStore); // 将数据转换为ref\n\n    // 登录函数\n    const signIn = () => {\n      if (username.value && password.value) {\n        // 在这里执行登录逻辑，可以通过接口调用实现\n        console.log('Username:', username.value);\n        console.log('Password:', password.value);\n        // 更新登录状态\n        // isLoggedIn.value = true\n        userStore.login(username, password); // 使用Pinia的登录函数\n        // 登录弹窗消失\n        showDialog.value = false;\n      } else {\n        // 如果用户名或密码为空显示警告\n        alert(\"请输入用户名和密码\");\n      }\n    };\n    const __returned__ = {\n      showDialog,\n      userStore,\n      isLoggedIn,\n      username,\n      password,\n      signIn,\n      ref,\n      get storeToRefs() {\n        return storeToRefs;\n      },\n      get useUserStore() {\n        return useUserStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","storeToRefs","useUserStore","showDialog","userStore","isLoggedIn","username","password","signIn","value","console","log","login","alert"],"sources":["D:/ForWork/找实习/中信证券code比赛/复赛/front/news-front/src/components/SideBar.vue"],"sourcesContent":["<template>\r\n  <aside class=\"sidebar\">\r\n    <div class=\"picks\">\r\n      <p style=\"margin-left:2px\">推荐体验</p>\r\n      <v-btn v-if=\"!isLoggedIn\" @click=\"showDialog= true\" rounded=\"lg\" size=\"small\" block>登录/注销</v-btn>\r\n    </div>\r\n    <!-- 登录弹出框，使用v-dialog组件实现 -->\r\n    <v-dialog v-model=\"showDialog\" persistent max-width=\"400\">\r\n      <v-card>\r\n        <!-- 标题部分 -->\r\n        <v-card-title>\r\n          <span class=\"text-h5\">登录</span>\r\n        </v-card-title>\r\n        <!-- 输入字段 -->\r\n        <v-card-text>\r\n          <v-text-field v-model=\"username\" label=\"用户名\" required></v-text-field>\r\n          <v-text-field v-model=\"password\" label=\"密码\" type=\"password\" required></v-text-field>\r\n        </v-card-text>\r\n        <!-- 按钮区域 -->\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <!-- 登录按钮 -->\r\n          <v-btn color=\"blue darken-1\" text @click=\"signIn\">登录/注销</v-btn>\r\n          <!-- 取消按钮 -->\r\n          <v-btn color=\"grey darken-1\" text @click=\"showDialog = false\">取消</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </aside>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n// 控制弹出框显示/隐藏的变量\r\nconst showDialog = ref(false)\r\n\r\n// 使用Pinia进行状态管理\r\nimport { storeToRefs } from 'pinia';\r\nimport { useUserStore } from '@/stores/user'; // 引入store\r\n\r\nconst userStore = useUserStore();\r\nconst { isLoggedIn, username, password } = storeToRefs(userStore); // 将数据转换为ref\r\n\r\n// 登录函数\r\nconst signIn = () => {\r\n  if (username.value && password.value) {\r\n    // 在这里执行登录逻辑，可以通过接口调用实现\r\n    console.log('Username:', username.value)\r\n    console.log('Password:', password.value)\r\n    // 更新登录状态\r\n    // isLoggedIn.value = true\r\n    userStore.login(username, password); // 使用Pinia的登录函数\r\n    // 登录弹窗消失\r\n    showDialog.value = false\r\n  } else {\r\n    // 如果用户名或密码为空显示警告\r\n    alert(\"请输入用户名和密码\")\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 边栏主体样式 */\r\n.sidebar {\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border-left: 1px solid #ddd;\r\n  width: 20%;\r\n}\r\n/* 按钮组的样式 */\r\n.picks button {\r\n  background-color: #bfcdff;\r\n  color: #000000;\r\n  border: none;\r\n  padding: 3px 6px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  min-width: 0;\r\n}\r\n</style>\r\n"],"mappings":"AAgCA,SAASA,GAAG,QAAQ,KAAK;AACzB;AAIA,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,YAAY,QAAQ,eAAe,CAAC,CAAC;;;;;;;;IAJ9C,MAAMC,UAAU,GAAGH,GAAG,CAAC,KAAK,CAAC;;IAE7B;IAIA,MAAMI,SAAS,GAAGF,YAAY,CAAC,CAAC;IAChC,MAAM;MAAEG,UAAU;MAAEC,QAAQ;MAAEC;IAAS,CAAC,GAAGN,WAAW,CAACG,SAAS,CAAC,CAAC,CAAC;;IAEnE;IACA,MAAMI,MAAM,GAAGA,CAAA,KAAM;MACnB,IAAIF,QAAQ,CAACG,KAAK,IAAIF,QAAQ,CAACE,KAAK,EAAE;QACpC;QACAC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEL,QAAQ,CAACG,KAAK,CAAC;QACxCC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAACE,KAAK,CAAC;QACxC;QACA;QACAL,SAAS,CAACQ,KAAK,CAACN,QAAQ,EAAEC,QAAQ,CAAC,CAAC,CAAC;QACrC;QACAJ,UAAU,CAACM,KAAK,GAAG,KAAK;MAC1B,CAAC,MAAM;QACL;QACAI,KAAK,CAAC,WAAW,CAAC;MACpB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}