{"ast":null,"code":"import { login, logout, getInfo } from '@/api/login';\nimport { getToken, setToken, removeToken, getName, setName, removeName } from '@/utils/auth';\nconst user = {\n  /* eslint-disable no-unused-vars */\n  state: {\n    token: getToken(),\n    name: getName(),\n    avatar: '',\n    roles: []\n  },\n  mutations: {\n    SET_TOKEN: (state, token) => {\n      state.token = token;\n    },\n    SET_NAME: (state, name) => {\n      state.name = name;\n    },\n    SET_AVATAR: (state, avatar) => {\n      state.avatar = avatar;\n    },\n    SET_ROLES: (state, roles) => {\n      state.roles = roles;\n    }\n  },\n  actions: {\n    // 登录\n    Login({\n      commit\n    }, userInfo) {\n      const username = userInfo.username.trim();\n      return new Promise((resolve, reject) => {\n        login(username, userInfo.password).then(response => {\n          const data = response.data;\n          const tokenStr = data.tokenHead + data.token;\n          setToken(tokenStr); //token持久化保存(js-cookies)\n          setName(username);\n          commit('SET_TOKEN', tokenStr); //保存(vuex) \n          commit('SET_NAME', username);\n          resolve();\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    // 获取用户信息\n    GetInfo({\n      commit,\n      state\n    }) {\n      return new Promise((resolve, reject) => {\n        getInfo().then(response => {\n          const data = response.data;\n          if (data.roles && data.roles.length > 0) {\n            // 验证返回的roles是否是一个非空数组\n            commit('SET_ROLES', data.roles);\n          } else {\n            reject('getInfo: roles must be a non-null array !');\n          }\n          commit('SET_NAME', data.username);\n          commit('SET_AVATAR', data.icon);\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    // 登出\n    LogOut({\n      commit,\n      state\n    }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token).then(() => {\n          commit('SET_TOKEN', '');\n          commit('SET_ROLES', []);\n          removeToken();\n          removeName();\n          resolve();\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    // 前端 登出\n    FedLogOut({\n      commit\n    }) {\n      return new Promise(resolve => {\n        commit('SET_TOKEN', '');\n        removeToken();\n        resolve();\n      });\n    }\n  }\n};\nexport default user;","map":{"version":3,"names":["login","logout","getInfo","getToken","setToken","removeToken","getName","setName","removeName","user","state","token","name","avatar","roles","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_ROLES","actions","Login","commit","userInfo","username","trim","Promise","resolve","reject","password","then","response","data","tokenStr","tokenHead","catch","error","GetInfo","length","icon","LogOut","FedLogOut"],"sources":["D:/ForWork/找实习/中信证券code比赛/复赛/front/news-front/src/store/modules/user.js"],"sourcesContent":["import { login, logout, getInfo } from '@/api/login'\r\nimport { getToken, setToken, removeToken,getName, setName ,removeName} from '@/utils/auth'\r\n\r\nconst user = {\r\n/* eslint-disable no-unused-vars */\r\n  state: {\r\n    token: getToken(),\r\n    name: getName(),\r\n    avatar: '',\r\n    roles: []\r\n  },\r\n\r\n  mutations: {\r\n    SET_TOKEN: (state, token) => {\r\n      state.token = token\r\n    },\r\n    SET_NAME: (state, name) => {\r\n      state.name = name\r\n    },\r\n    SET_AVATAR: (state, avatar) => {\r\n      state.avatar = avatar\r\n    },\r\n    SET_ROLES: (state, roles) => {\r\n      state.roles = roles\r\n    }\r\n  },\r\n\r\n  actions: {\r\n    // 登录\r\n    Login({ commit }, userInfo) {\r\n      const username = userInfo.username.trim()\r\n      return new Promise((resolve, reject) => {\r\n        login(username, userInfo.password).then(response => {\r\n          const data = response.data\r\n          const tokenStr = data.tokenHead+data.token\r\n          setToken(tokenStr)  //token持久化保存(js-cookies)\r\n          setName(username)\r\n          commit('SET_TOKEN', tokenStr) //保存(vuex) \r\n          commit('SET_NAME', username)\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 获取用户信息\r\n    GetInfo({ commit, state }) {\r\n      return new Promise((resolve, reject) => {\r\n        getInfo().then(response => {\r\n          const data = response.data\r\n          if (data.roles && data.roles.length > 0) { // 验证返回的roles是否是一个非空数组\r\n            commit('SET_ROLES', data.roles)\r\n          } else {\r\n            reject('getInfo: roles must be a non-null array !')\r\n          }\r\n          commit('SET_NAME', data.username)\r\n          commit('SET_AVATAR', data.icon)\r\n          resolve(response)\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 登出\r\n    LogOut({ commit, state }) {\r\n      return new Promise((resolve, reject) => {\r\n        logout(state.token).then(() => {\r\n          commit('SET_TOKEN', '')\r\n          commit('SET_ROLES', [])\r\n          removeToken()\r\n          removeName()\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n\r\n    // 前端 登出\r\n    FedLogOut({ commit }) {\r\n      return new Promise(resolve => {\r\n        commit('SET_TOKEN', '')\r\n        removeToken()\r\n        resolve()\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport default user\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}