{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3eca7188\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"sidebar\"\n};\nconst _hoisted_2 = {\n  class: \"picks\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"margin-left\": \"2px\"\n  }\n}, \"推荐体验\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"text-h5\"\n}, \"登录\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_text_field = _resolveComponent(\"v-text-field\");\n  const _component_v_card_text = _resolveComponent(\"v-card-text\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_card_actions = _resolveComponent(\"v-card-actions\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_dialog = _resolveComponent(\"v-dialog\");\n  return _openBlock(), _createElementBlock(\"aside\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, !$setup.isLoggedIn ? (_openBlock(), _createBlock(_component_v_btn, {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $setup.showDialog = true),\n    rounded: \"lg\",\n    size: \"small\",\n    block: \"\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"登录/注销\")]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" 登录弹出框，使用v-dialog组件实现 \"), _createVNode(_component_v_dialog, {\n    modelValue: $setup.showDialog,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.showDialog = $event),\n    persistent: \"\",\n    \"max-width\": \"400\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_card, null, {\n      default: _withCtx(() => [_createCommentVNode(\" 标题部分 \"), _createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_hoisted_4]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 输入字段 \"), _createVNode(_component_v_card_text, null, {\n        default: _withCtx(() => [_createVNode(_component_v_text_field, {\n          modelValue: $setup.username,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.username = $event),\n          label: \"用户名\",\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode(_component_v_text_field, {\n          modelValue: $setup.password,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.password = $event),\n          label: \"密码\",\n          type: \"password\",\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createCommentVNode(\" 按钮区域 \"), _createVNode(_component_v_card_actions, null, {\n        default: _withCtx(() => [_createVNode(_component_v_spacer), _createCommentVNode(\" 登录按钮 \"), _createVNode(_component_v_btn, {\n          color: \"blue darken-1\",\n          text: \"\",\n          onClick: $setup.signIn\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"登录/注销\")]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" 取消按钮 \"), _createVNode(_component_v_btn, {\n          color: \"grey darken-1\",\n          text: \"\",\n          onClick: _cache[3] || (_cache[3] = $event => $setup.showDialog = false)\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"取消\")]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$setup","isLoggedIn","_createBlock","_component_v_btn","key","onClick","_cache","$event","showDialog","rounded","size","block","default","_withCtx","_createTextVNode","_","_createCommentVNode","_createVNode","_component_v_dialog","modelValue","persistent","_component_v_card","_component_v_card_title","_hoisted_4","_component_v_card_text","_component_v_text_field","username","label","required","password","type","_component_v_card_actions","_component_v_spacer","color","text","signIn"],"sources":["D:\\ForWork\\找实习\\中信证券code比赛\\复赛\\front\\news-front\\src\\components\\SideBar.vue"],"sourcesContent":["<template>\r\n  <aside class=\"sidebar\">\r\n    <div class=\"picks\">\r\n      <p style=\"margin-left:2px\">推荐体验</p>\r\n      <v-btn v-if=\"!isLoggedIn\" @click=\"showDialog= true\" rounded=\"lg\" size=\"small\" block>登录/注销</v-btn>\r\n    </div>\r\n    <!-- 登录弹出框，使用v-dialog组件实现 -->\r\n    <v-dialog v-model=\"showDialog\" persistent max-width=\"400\">\r\n      <v-card>\r\n        <!-- 标题部分 -->\r\n        <v-card-title>\r\n          <span class=\"text-h5\">登录</span>\r\n        </v-card-title>\r\n        <!-- 输入字段 -->\r\n        <v-card-text>\r\n          <v-text-field v-model=\"username\" label=\"用户名\" required></v-text-field>\r\n          <v-text-field v-model=\"password\" label=\"密码\" type=\"password\" required></v-text-field>\r\n        </v-card-text>\r\n        <!-- 按钮区域 -->\r\n        <v-card-actions>\r\n          <v-spacer></v-spacer>\r\n          <!-- 登录按钮 -->\r\n          <v-btn color=\"blue darken-1\" text @click=\"signIn\">登录/注销</v-btn>\r\n          <!-- 取消按钮 -->\r\n          <v-btn color=\"grey darken-1\" text @click=\"showDialog = false\">取消</v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </v-dialog>\r\n  </aside>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\n// 控制弹出框显示/隐藏的变量\r\nconst showDialog = ref(false)\r\n\r\n// 使用Pinia进行状态管理\r\nimport { storeToRefs } from 'pinia';\r\nimport { useUserStore } from '@/stores/user'; // 引入store\r\n\r\nconst userStore = useUserStore();\r\nconst { isLoggedIn, username, password } = storeToRefs(userStore); // 将数据转换为ref\r\n\r\n// 登录函数\r\nconst signIn = () => {\r\n  if (username.value && password.value) {\r\n    // 在这里执行登录逻辑，可以通过接口调用实现\r\n    console.log('Username:', username.value)\r\n    console.log('Password:', password.value)\r\n    // 更新登录状态\r\n    // isLoggedIn.value = true\r\n    userStore.login(username, password); // 使用Pinia的登录函数\r\n    // 登录弹窗消失\r\n    showDialog.value = false\r\n  } else {\r\n    // 如果用户名或密码为空显示警告\r\n    alert(\"请输入用户名和密码\")\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 边栏主体样式 */\r\n.sidebar {\r\n  padding: 20px;\r\n  background-color: #ffffff;\r\n  border-left: 1px solid #ddd;\r\n  width: 20%;\r\n}\r\n/* 按钮组的样式 */\r\n.picks button {\r\n  background-color: #bfcdff;\r\n  color: #000000;\r\n  border: none;\r\n  padding: 3px 6px;\r\n  cursor: pointer;\r\n  font-size: 14px;\r\n  min-width: 0;\r\n}\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAS;;EACfA,KAAK,EAAC;AAAO;gEAChBC,mBAAA,CAAmC;EAAhCC,KAAuB,EAAvB;IAAA;EAAA;AAAuB,GAAC,MAAI;gEAQ3BD,mBAAA,CAA+B;EAAzBD,KAAK,EAAC;AAAS,GAAC,IAAE;;;;;;;;;;uBAVhCG,mBAAA,CA2BQ,SA3BRC,UA2BQ,GA1BNH,mBAAA,CAGM,OAHNI,UAGM,GAFJC,UAAmC,E,CACrBC,MAAA,CAAAC,UAAU,I,cAAxBC,YAAA,CAAiGC,gBAAA;IAJvGC,GAAA;IAIiCC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEP,MAAA,CAAAQ,UAAU;IAAQC,OAAO,EAAC,IAAI;IAACC,IAAI,EAAC,OAAO;IAACC,KAAK,EAAL;;IAJpFC,OAAA,EAAAC,QAAA,CAI0F,MAAK,CAJ/FC,gBAAA,CAI0F,OAAK,E;IAJ/FC,CAAA;QAAAC,mBAAA,e,GAMIA,mBAAA,0BAA6B,EAC7BC,YAAA,CAoBWC,mBAAA;IA3BfC,UAAA,EAOuBnB,MAAA,CAAAQ,UAAU;IAPjC,uBAAAF,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOuBP,MAAA,CAAAQ,UAAU,GAAAD,MAAA;IAAEa,UAAU,EAAV,EAAU;IAAC,WAAS,EAAC;;IAPxDR,OAAA,EAAAC,QAAA,CAQM,MAkBS,CAlBTI,YAAA,CAkBSI,iBAAA;MA1BfT,OAAA,EAAAC,QAAA,CASQ,MAAa,CAAbG,mBAAA,UAAa,EACbC,YAAA,CAEeK,uBAAA;QAZvBV,OAAA,EAAAC,QAAA,CAWU,MAA+B,CAA/BU,UAA+B,C;QAXzCR,CAAA;UAaQC,mBAAA,UAAa,EACbC,YAAA,CAGcO,sBAAA;QAjBtBZ,OAAA,EAAAC,QAAA,CAeU,MAAqE,CAArEI,YAAA,CAAqEQ,uBAAA;UAf/EN,UAAA,EAeiCnB,MAAA,CAAA0B,QAAQ;UAfzC,uBAAApB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeiCP,MAAA,CAAA0B,QAAQ,GAAAnB,MAAA;UAAEoB,KAAK,EAAC,KAAK;UAACC,QAAQ,EAAR;iDAC7CX,YAAA,CAAoFQ,uBAAA;UAhB9FN,UAAA,EAgBiCnB,MAAA,CAAA6B,QAAQ;UAhBzC,uBAAAvB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgBiCP,MAAA,CAAA6B,QAAQ,GAAAtB,MAAA;UAAEoB,KAAK,EAAC,IAAI;UAACG,IAAI,EAAC,UAAU;UAACF,QAAQ,EAAR;;QAhBtEb,CAAA;UAkBQC,mBAAA,UAAa,EACbC,YAAA,CAMiBc,yBAAA;QAzBzBnB,OAAA,EAAAC,QAAA,CAoBU,MAAqB,CAArBI,YAAA,CAAqBe,mBAAA,GACrBhB,mBAAA,UAAa,EACbC,YAAA,CAA+Dd,gBAAA;UAAxD8B,KAAK,EAAC,eAAe;UAACC,IAAI,EAAJ,EAAI;UAAE7B,OAAK,EAAEL,MAAA,CAAAmC;;UAtBpDvB,OAAA,EAAAC,QAAA,CAsB4D,MAAK,CAtBjEC,gBAAA,CAsB4D,OAAK,E;UAtBjEC,CAAA;YAuBUC,mBAAA,UAAa,EACbC,YAAA,CAAwEd,gBAAA;UAAjE8B,KAAK,EAAC,eAAe;UAACC,IAAI,EAAJ,EAAI;UAAE7B,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEP,MAAA,CAAAQ,UAAU;;UAxB9DI,OAAA,EAAAC,QAAA,CAwBwE,MAAE,CAxB1EC,gBAAA,CAwBwE,IAAE,E;UAxB1EC,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}